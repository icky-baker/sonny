version: "3.7"

services:
  naming:
    image: "birdi7/ds_dfs_naming"
    build:
      context: .
      dockerfile: naming.dockerfile

    command: make naming_preprod

    ports:
      - 80:80
    depends_on:
      - db
    volumes:
      - ./logs:/tmp/

    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.check-health.schedule: "@every 5s"
      ofelia.job-exec.check-health.command: "make check"

  ofelia:
    image: mcuadros/ofelia:latest
    depends_on:
      - naming
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  client:
    image: "birdi7/ds_dfs_client"
    build:
      context: .
      dockerfile: client.dockerfile

    command: bash
    volumes:
      - ./client_data:/app/data

#    depends_on:
#      - storage_1
#      - storage_2
#      - storage_3

  db:
    image: postgres
    environment:
      - POSTGRES_DB=naming
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

#    volumes:
#      - postgres-data:/var/lib/postgresql/data

  storage_1:
    image: "birdi7/ds_dfs_storage"
    build:
      context: .
      dockerfile: storage.dockerfile
    volumes:
      - ./logs:/tmp/
      # - ./dfs/:/app/var/
    environment:
      - HOSTNAME=storage_1

    depends_on:
      - naming

#    labels:
#      ofelia.enabled: "true"
#      ofelia.job-exec.ss-sync-1.schedule: "@every 60s"
#      ofelia.job-exec.ss-sync-1.command: "make ss_sync"
    deploy:
      restart_policy:
        condition: on-failure

  storage_2:
    image: "birdi7/ds_dfs_storage"
    build:
      context: .
      dockerfile: storage.dockerfile
    volumes:
      - ./logs:/tmp/
      # - ./dfs/:/app/var/
    environment:
      - HOSTNAME=storage_2

    depends_on:
      - naming
#
#    labels:
#      ofelia.enabled: "true"
#      ofelia.job-exec.ss-sync-2.schedule: "@every 60s"
#      ofelia.job-exec.ss-sync-2.command: "make ss_sync"

  storage_3:
    image: "birdi7/ds_dfs_storage"
    build:
      context: .
      dockerfile: storage.dockerfile
    volumes:
      - ./logs:/tmp/
      # - ./dfs/:/app/var/
    environment:
      - HOSTNAME=storage_3

    depends_on:
      - naming

#    labels:
#      ofelia.enabled: "true"
#      ofelia.job-exec.ss-sync-3.schedule: "@every 60s"
#      ofelia.job-exec.ss-sync-3.command: "make ss_sync"

volumes:
  postgres-data:
